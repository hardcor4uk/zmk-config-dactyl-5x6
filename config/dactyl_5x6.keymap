#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// dt-formatter: indent = "  "
// dt-formatter: multilineIntegerCellsIndent = "reindent"
// dt-formatter: multilineListCommaStyle = "leading"

&sk { /delete-property/ ignore-modifiers; };

/ {
  conditional_layers {
    compatible = "zmk,conditional-layers";

    tri_layer {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
        &kp ESC           &kp N1  &kp N2          &kp N3           &kp N4   &kp N5     &kp N6   &kp N7      &kp N8        &kp N9        &kp N0    &kp BSPC
        &kp TAB           &kp Q   &kp W           &kp E            &kp R    &kp T      &kp Y    &kp U       &kp I         &kp O         &kp P     &kp MINUS
        &kp LEFT_SHIFT    &kp A   &kp S           &kp D            &kp F    &kp G      &kp H    &kp J       &kp K         &kp L         &kp SEMI  &kp SQT
        &kp LEFT_CONTROL  &kp Z   &kp X           &kp C            &kp V    &kp B      &kp N    &kp M       &kp COMMA     &kp DOT       &kp FSLH  &kp BACKSLASH
                                  &kp LEFT_BRACE  &kp RIGHT_BRACE  &mo 2    &kp SPACE  &kp RET  &mo 1       &kp PLUS      &kp X
                                  &kp BACKSPACE   &kp GRAVE        &kp TAB  &kp HOME   &kp END  &kp DELETE  &kp LEFT_WIN  &kp LEFT_ALT
      >;

      raise {
        bindings = <
               &trans    &trans   &trans &trans   &trans   &trans      &trans    &trans    &trans    &trans   &trans   &trans
          &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
          &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
          &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &trans &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT &trans
                             &trans &trans   &trans   &trans      &trans    &trans    &trans   &trans 
        >;
      };

      lower {
        bindings = <
          &kp ESC    &kp F1       &kp F2       &kp F3       &kp F4       &kp F5         &kp F6   &kp F7   &kp F8 &kp F9    &kp F10 &kp BSPC
          &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
          &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
          &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                             &trans       &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT &trans
                             &trans       &trans       &trans       &trans         &trans   &trans   &trans   &trans
        >;
      };
    };

    layer_1 {
      bindings = <
        &kp F12  &kp F1    &kp F2  &kp F3    &kp F4     &kp F5    &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
        &trans   &trans    &trans  &trans    &trans     &kp LBKT  &kp RBKT  &trans  &trans  &trans  &trans   &trans
        &trans   &kp LEFT  &kp UP  &kp DOWN  &kp RIGHT  &trans    &trans    &trans  &trans  &trans  &trans   &trans
        &trans   &trans    &trans  &trans    &trans     &trans    &trans    &trans  &trans  &trans  &trans   &trans
                           &trans  &trans    &trans     &trans    &trans    &trans  &trans  &trans
                           &trans  &trans    &trans     &trans    &trans    &trans  &trans  &trans
      >;
    };

    layer_2 {
      bindings = <
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
      >;
    };
  };
};
